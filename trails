// The following are exercises from Roy.

// to start out simple, let's make a function that converts miles to km then let's assume you
// want to play around with Trail in formation. Each trail has a name, a distance, a difficulty
// rating and a description. That should read "trail information". create a bunch of trails with
// various data. then let's create a function that gives you an average distance and average
// difficulty for all trails you have data for.


// write a function that converts miles to Kilometers
// I want to be able to enter any number of miles and have it 
// convert to km.
var oneKm = 1.609344;

function convert(x) {
	return x * oneKm;
}

convert(6.2);
// Spent 1/2 hour on this, then got help from Drew. I was trying to use oneKm as one of my
// parameters.

// Making a constructor of trail info.
function Trail (name, distance, difficulty, description) {
	this.name = name;
	this.distance = distance;
	this.difficulty = difficulty;
	this.description = description;
}

sht = new Trail("Superior Hiking Trail",     206, 3, "Beautiful. Lots of waterfalls.");

at  = new Trail("Appalation Trail",         2168, 6, "Beautiful. Lots of hills.");

pct = new Trail("Pacific Crest Trail",      2650, 7, "Volcanos and Northern Washington");

cdt = new Trail("Continental Divide Trail", 2700, 8, "The phd of backpacking");

// make an empty array and push all trails into it. I know this is not the ideal way to do this.
// It works, but I wouldn't want to type out .distance if I had more trails. I couldn't figure out
// a better way. 
// var array = [];
// array.push(sht.distance, at.distance, pct.distance, cdt.distance);


// Need to make a function that will average the distance and difficulty of all the trails.


// Figured it out.
var array = [];
array.push(sht, at, pct, cdt);


// This gives me the average distance of all the trails.
// Map over the array of trails and return the distance property. Then reduce and divide by
// the length of the array. 
array.map(function(property){
	return property.distance;
		}).reduce(function(a,b){
			return a+b;
				}) / array.length;


// It wouldn't be good to do this again for the average of difficulty.
// Make a function for averaging anything.
function average (sum, elements) {
	return sum / elements;
};






















